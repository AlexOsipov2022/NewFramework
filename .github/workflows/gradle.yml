
name: Test CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

   # --- FIX: Ensure Google Chrome Stable is Installed for UI Tests ---
    # Replacing 'chromium-browser' installation with 'google-chrome-stable' for better WebDriver compatibility.
    - name: Install Google Chrome Stable (for UI Testing)
      run: |
        # Устанавливаем wget для скачивания пакета
        sudo apt-get update
        sudo apt-get install -y wget
        
        # Скачиваем и устанавливаем Google Chrome Stable .deb
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get install -f -y
        
        # Устанавливаем общие зависимости, необходимые для работы headless-браузера
        sudo apt-get install -y libglib2.0-0 libnss3 libfontconfig1 libdbus-1-3

    - name: Set execute permission for gradlew
      run: chmod +x gradlew

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build
      
    # --- 4. Allure Report Generation ---
    - name: Copy Allure History
      uses: actions/checkout@v2
      if: always()
      with:
        ref: gh-pages
        path: gh-pages

    - name: Build Allure Report
      uses: simple-elf/allure-report-action@v1.10
      if: always()
      with:
        allure_results: build/allure-results
        # Сохраняем готовый отчет в папку 'allure-history' в корне рабочего пространства.
        allure_history: allure-history 
        keep_reports: 20

    - name: Publish Allure Report
      if: always()
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PUBLISH_BRANCH: gh-pages
        # FIX: Указываем PUBLISH_DIR: allure-history, чтобы соответствовало пути выше.
        PUBLISH_DIR: allure-history

    # --- Добавленный шаг для вывода ссылки на отчет ---
    - name: Display Allure Report URL
      if: always()
      run: |
        # Формируем ссылку на GitHub Pages, используя встроенные переменные GitHub
        REPORT_URL="https://${{ github.repository_owner }}.github.com/${{ github.event.repository.name }}/allure-history/index.html"
        echo "## Allure Report Live Here:"
        echo "$REPORT_URL"
        echo "::notice file=README.md,title=Allure Report URL::Open $REPORT_URL to see the test results."

  dependency-submission:
    # This job now only focuses on dependency submission.
    # It must run AFTER the build job ensures dependencies are resolved and metadata is available.
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    # Needs to be executable for the dependency submission tool to work properly
    - name: Set execute permission for gradlew
      run: chmod +x gradlew

    # Generates and submits a dependency graph.
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
